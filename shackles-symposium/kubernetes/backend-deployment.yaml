apiVersion: apps/v1
kind: Deployment
metadata:
  name: shackles-backend
  namespace: shackles-symposium
  labels:
    app: shackles-backend
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shackles-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: shackles-backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: shackles-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: shackles-secrets
              key: mongodb-uri
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: shackles-secrets
              key: redis-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: shackles-secrets
              key: jwt-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: shackles-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: shackles-secrets
              key: aws-secret-access-key
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: shackles-config
              key: aws-region
        - name: AWS_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: shackles-config
              key: aws-s3-bucket
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: shackles-symposium
  labels:
    app: shackles-backend
spec:
  type: ClusterIP
  selector:
    app: shackles-backend
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  sessionAffinity: ClientIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shackles-backend-hpa
  namespace: shackles-symposium
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shackles-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
